[namespaceprefix Pharmatechnik.Apotheke.XTplus.Common]

[using Pharmatechnik.Apotheke.XTplus.Framework.Core.WFL]
[using Pharmatechnik.Apotheke.XTplus.Framework.Core.IWFL] 



task MessageBoxOk [base StandardWFS : ILegacyMessageBoxWFS]
				  [result MessageBoxResult]
{
    init [params string message, MessageBoxImage messageBoxImage];
        
    view MessageBoxOK;
    
    exit Ok;

    init --> MessageBoxOK;  
    
    MessageBoxOK --> Ok on Ok;
}

 
task MessageBoxContinue				[base StandardWFS : ILegacyMessageBoxWFS]
									[result MessageBoxResult]
{
    init [params string message, MessageBoxImage messageBoxImage];

    dialog MessageBoxContinue;
    
    exit Ok;
    choice Choice_Ok;

    init --> MessageBoxContinue;  
    
    MessageBoxContinue --> Choice_Ok    on Ok;
    Choice_Ok          --> Ok;
}
 
task MessageBoxYesNo				[base StandardWFS : ILegacyMessageBoxWFS]
									[result MessageBoxResult]
{
    init i1 [params string message, MessageBoxImage messageBoxImage];
    /// <summary>
    /// same as previous, but with !! FOCUS info !!, to set the FOCUS on a specific BUTTON
    /// </summary>
    init i2 [params string message, MessageBoxImage messageBoxImage, MessageBoxButton focusedButton];
    
    view MessageBoxYesNo;
    
    exit Yes;
    exit No;

    i1 --> MessageBoxYesNo;  
    i2 --> MessageBoxYesNo;  
    
    MessageBoxYesNo --> Yes    on Yes;
    MessageBoxYesNo --> No     on No;
}

task MessageBoxYesNoCancel			[base StandardWFS : ILegacyMessageBoxWFS]
									[result MessageBoxResult]
{
    init i1 [params string message, MessageBoxImage messageBoxImage];
    /// <summary>
    /// same as previous, but with !! FOCUS info !!, to set the FOCUS on a specific BUTTON
    /// </summary>
    init i2 [params string message, MessageBoxImage messageBoxImage, MessageBoxButton focusedButton];
    
    view MessageBoxYesNoCancel;
    
    exit Yes;
    exit No;
    exit Cancel;

    i1 --> MessageBoxYesNoCancel;  
    i2 --> MessageBoxYesNoCancel;  
    
    MessageBoxYesNoCancel --> Yes    on Yes;
    MessageBoxYesNoCancel --> No     on No;
    MessageBoxYesNoCancel --> Cancel on Cancel;
}

task MessageBoxYesCancel			[base StandardWFS : ILegacyMessageBoxWFS]
									[result MessageBoxResult]
{
    init i1 [params string message, MessageBoxImage messageBoxImage];
    /// <summary>
    /// same as previous, but with !! FOCUS info !!, to set the FOCUS on a specific BUTTON
    /// </summary>
    init i2 [params string message, MessageBoxImage messageBoxImage, MessageBoxButton focusedButton];
    
    view MessageBoxYesCancel;
    
    exit Yes;
    exit Cancel;

    i1 --> MessageBoxYesCancel;  
    i2 --> MessageBoxYesCancel;  
    
    MessageBoxYesCancel --> Yes    on Yes;
    MessageBoxYesCancel --> Cancel on Cancel;
}

task MessageBoxWith2Buttons			[code "public enum MessageBoxWith2ButtonsResult { Fct1, Fct2 }"]
									[base StandardWFS : ILegacyMessageBoxWFS, IBeginWFServiceBase]
									[result MessageBoxWith2ButtonsResult ]
{
    init i0 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2];
    init i2 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2, MessageBoxButton focusedButton];
    
    view MessageBoxWith2Buttons;
    
    exit Fct1;
    exit Fct2;

    i0 --> MessageBoxWith2Buttons;  
    i2 --> MessageBoxWith2Buttons;  
    
    MessageBoxWith2Buttons --> Fct1 on Fct1;
    MessageBoxWith2Buttons --> Fct2 on Fct2;
}

task MessageBoxWith3Buttons			[code "public enum MessageBoxWith3ButtonsResult { Fct1, Fct2, Fct3 }"]
									[base StandardWFS : ILegacyMessageBoxWFS, IBeginWFServiceBase]
									[result MessageBoxWith3ButtonsResult ]
{
    init i0 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2, string labelButton3];
    init i2 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2, string labelButton3, MessageBoxButton focusedButton];
    
    view MessageBoxWith3Buttons;
    
    exit Fct1;
    exit Fct2;
    exit Fct3;

    i0 --> MessageBoxWith3Buttons;  
    i2 --> MessageBoxWith3Buttons;  
    
    MessageBoxWith3Buttons --> Fct1 on Fct1;
    MessageBoxWith3Buttons --> Fct2 on Fct2;
    MessageBoxWith3Buttons --> Fct3 on Fct3;
}

task MessageBoxWith4Buttons			[code "public enum MessageBoxWith4ButtonsResult { Fct1, Fct2, Fct3, Fct4 }"]
									[base StandardWFS : ILegacyMessageBoxWFS, IBeginWFServiceBase]
									[result MessageBoxWith4ButtonsResult ]
{
    init i0 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2, string labelButton3, string labelButton4];
    init i2 [params string message, MessageBoxImage messageBoxImage, 
			 string labelButton1, string labelButton2, string labelButton3, string labelButton4, MessageBoxButton focusedButton];
    
    view MessageBoxWith4Buttons;
    
    exit Fct1;
    exit Fct2;
    exit Fct3;
    exit Fct4;

    i0 --> MessageBoxWith4Buttons;  
    i2 --> MessageBoxWith4Buttons;  
    
    MessageBoxWith4Buttons --> Fct1 on Fct1;
    MessageBoxWith4Buttons --> Fct2 on Fct2;
    MessageBoxWith4Buttons --> Fct3 on Fct3;
    MessageBoxWith4Buttons --> Fct4 on Fct4;
}