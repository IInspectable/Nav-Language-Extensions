<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProductName>Nav Language Library</ProductName>
    <ProductVersion>3.0.77</ProductVersion>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyInfoFile>$(MSBuildProjectDirectory)\ThisAssembly.generated.cs</AssemblyInfoFile>
  </PropertyGroup>
  <ItemGroup>
    <AssemblyInfoLine Include="// Warning: This is generated code! Don't touch as it will be overwritten by the code generator." />
    <AssemblyInfoLine Include="namespace Pharmatechnik.Nav.Language {" />
    <AssemblyInfoLine Include="%20%20%20%20static partial class ThisAssembly {" />
    <AssemblyInfoLine Include="%20%20%20%20%20%20%20%20public const string ProductVersion = &quot;$(ProductVersion)&quot;%3b" />
    <AssemblyInfoLine Include="%20%20%20%20%20%20%20%20public const string ProductName = &quot;$(ProductName)&quot;%3b" />
    <AssemblyInfoLine Include="%20%20%20%20}" />
    <AssemblyInfoLine Include="}" />
  </ItemGroup>
  <Target Name="UpdateProductVersion" BeforeTargets="PrepareForBuild">
    <Message Text="Updating Assembly Info $(AssemblyInfoFile)" Importance="high" />
    <WriteLinesToFile File="$(AssemblyInfoFile)" Overwrite="true" Lines="@(AssemblyInfoLine)" />
  </Target>
  <ItemGroup>
    <AvailableItemName Include="ExportStringTemplates" />
  </ItemGroup>
  <UsingTask TaskName="GenerateStringTemplateExport" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <OutputFiles ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="..\packages\StringTemplate4.4.0.8\lib\net35-client\Antlr4.StringTemplate.dll" />
      <Reference Include="..\packages\Antlr3.Runtime.3.5.1\lib\net40-client\Antlr3.Runtime.dll" />
      <Using Namespace="System" />
      <Code Type="Fragment" Language="cs"><![CDATA[        
          var generatedFileNames = new List<string>();
        
          foreach(var file in Files) {
          
            var fullName   = file.GetMetadata("FullPath");
            var fileName   = file.GetMetadata("FileName");
            var @namespace = file.GetMetadata("CustomToolNamespace");
            var targetPath = Path.ChangeExtension(fullName,"generated.cs");
            
            generatedFileNames.Add(targetPath);
            
            var sb = new StringBuilder();
            
            sb.AppendLine  ("// ReSharper disable once CheckNamespace");
            sb.AppendFormat("namespace {0} {{", @namespace); sb.AppendLine();            
            sb.AppendFormat("    public static partial class {0} {{", fileName); sb.AppendLine();
            
            
            var templateGroup=new Antlr4.StringTemplate.TemplateGroupFile(fullName);
            foreach(var templateName in templateGroup.GetTemplateNames()) {
              
              var name    = templateName.Substring(1, 1).ToUpperInvariant() + templateName.Substring(2);
              var st      = templateGroup.GetInstanceOf(name);
              var content = st.Render();
              
              sb.AppendLine  ("        /// <summary>");
              sb.AppendFormat("        /// {0}", content); sb.AppendLine();
              sb.AppendLine  ("        /// </summary>");
              sb.AppendFormat("        public const string {0} = \"{1}\";", name, content); sb.AppendLine();              
            }
            
            sb.AppendLine("    }");
            
            sb.AppendLine("}");
            
            File.WriteAllText(targetPath, sb.ToString(), Encoding.UTF8);
          }
          OutputFiles = generatedFileNames.Select(name => new TaskItem(name)).ToArray();
         ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="GenerateStringTemplateExport" BeforeTargets="PrepareForBuild">
    <GenerateStringTemplateExport Files="@(ExportStringTemplates)" />
    <ItemGroup>
      <EmbeddedResource Include="@(ExportStringTemplates)" />
    </ItemGroup>
  </Target>
</Project>