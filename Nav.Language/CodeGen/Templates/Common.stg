delimiters "<", ">"

writeFileHeader(context) ::=<<
//------------------------------------------------------------------------------
// \<auto-generated\>
//     This code was generated by a tool.
//     Version: <context.ProductVersion>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// \</auto-generated\>
//------------------------------------------------------------------------------
>>

writeUsingDirectives(usings) ::=<<
#region Using Directives
<usings:writeUsingDirective(); separator="\r\n">
#endregion
>>

writeUsingDirective(namespace) ::=<<
using <namespace>;
>>

writeParameterList(parameters) ::=<<
<parameters:writeParameter(); anchor, separator=",\r\n">
>>

writeParameter(parameter) ::=<<
<parameter.ParameterType> <parameter.ParameterName>
>>

writeFieldDeclarationCollapsibleList(parameters) ::=<<
<parameters:writeFieldDeclaration(); separator="\r\n">

>>

writeFieldDeclaration(parameter) ::=<<
readonly <parameter.ParameterType> <FieldPrefix()><parameter.ParameterName>;
>>

writeFieldInitList(parameters) ::=<<
<parameters:writeFieldInit(); separator="\r\n">
>>

writeFieldInit(parameter) ::=<<
<FieldPrefix()><parameter.ParameterName> = <parameter.ParameterName>;
>>

writeParameterExpressions(parameters) ::=<<
<parameters:writeParameterExpression(); anchor, separator=",\r\n">
>>

writeParameterExpression(parameter) ::=<<
<parameter.ParameterName>
>>

writeParameterExpressionsInline(parameters) ::=<<
<parameters:writeParameterExpression(); anchor, separator=", ">
>>

writeTaskAnnotation(syntaxFileName, taskName) ::=<<
#region Annotations
/// \<<AnnotationTagNavFile()>\><syntaxFileName>\</<AnnotationTagNavFile()>\>
/// \<<AnnotationTagNavTask()>\><taskName>\</<AnnotationTagNavTask()>\>
#endregion
>>

writeInitCallAnnotation(beginItfFullyQualifiedName) ::=<<
#region Annotations
/// \<<AnnotationTagNavInitCall()>\><beginItfFullyQualifiedName>\</<AnnotationTagNavInitCall()>\>
#endregion
>>

writeTriggerAnnotation(triggerName) ::=<<
#region Annotations
/// \<<AnnotationTagNavTrigger()>\><triggerName>\</<AnnotationTagNavTrigger()>\>
#endregion
>>

writeNavInitAnnotation(initName) ::=<<
#region Annotations
/// \<<AnnotationTagNavInit()>\><initName>\</<AnnotationTagNavInit()>\>
#endregion
>>

writeNavExitAnnotation(taskName) ::=<<
#region Annotations
/// \<<AnnotationTagNavExit()>\><taskName>\</<AnnotationTagNavExit()>\>
#endregion
>>