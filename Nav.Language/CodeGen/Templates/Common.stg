delimiters "<", ">"

writeFileHeader(context) ::=<<
//------------------------------------------------------------------------------
// \<auto-generated\>
//     This code was generated by a tool.
//     Version: <context.ProductVersion>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// \</auto-generated\>
//------------------------------------------------------------------------------
>>

writeUsingDirectives(usings) ::=<<
#region Using Directives
<usings:writeUsingDirective(); separator="\r\n">
#endregion
>>

writeUsingDirective(namespace) ::=<<
using <namespace>;
>>

writeParameterList(parameters) ::=<<
<parameters:writeParameter(); anchor, separator=",\r\n">
>>

writeParameter(parameter) ::=<<
<parameter.ParameterType> <parameter.ParameterName>
>>

writeFieldDeclarationList(parameters) ::=<<
<model.TaskBegins:writeFieldDeclaration(); separator="\r\n">

>>

writeFieldDeclaration(parameter) ::=<<
readonly <parameter.ParameterType> _<parameter.ParameterName>;
>>

writeFieldInitList(parameters) ::=<<
<parameters:writeFieldInit(); separator="\r\n">
>>

writeFieldInit(parameter) ::=<<
_<parameter.ParameterName> = <parameter.ParameterName>;
>>

writeParameterExpressions(parameters) ::=<<
<parameters:writeParameterExpression(); anchor, separator=",\r\n">
>>

writeParameterExpression(parameter) ::=<<
<parameter.ParameterName>
>>

writeParameterExpressionsInline(parameters) ::=<<
<parameters:writeParameterExpression(); anchor, separator=", ">
>>

writeTaskAnnotation(syntaxFileName, taskName) ::=<<
#region Annotations
/// \<<AnnotationTagNavFile()>\><syntaxFileName>\</<AnnotationTagNavFile()>\>
/// \<<AnnotationTagNavTask()>\><taskName>\</<AnnotationTagNavTask()>\>
#endregion
>>