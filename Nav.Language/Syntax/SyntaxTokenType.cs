using Pharmatechnik.Nav.Language.Generated;

namespace Pharmatechnik.Nav.Language {

    public enum SyntaxTokenType {        
        TaskKeyword            = NavGrammar.TaskKeyword,
        TaskrefKeyword         = NavGrammar.TaskrefKeyword,
        InitKeyword            = NavGrammar.InitKeyword,
        EndKeyword             = NavGrammar.EndKeyword,
        ChoiceKeyword          = NavGrammar.ChoiceKeyword,
        DialogKeyword          = NavGrammar.DialogKeyword,
        ViewKeyword            = NavGrammar.ViewKeyword,
        ExitKeyword            = NavGrammar.ExitKeyword,
        OnKeyword              = NavGrammar.OnKeyword,
        IfKeyword              = NavGrammar.IfKeyword,
        ElseKeyword            = NavGrammar.ElseKeyword,
        SpontaneousKeyword     = NavGrammar.SpontaneousKeyword,
        SpontKeyword           = NavGrammar.SpontKeyword,
        DoKeyword              = NavGrammar.DoKeyword,
        ResultKeyword          = NavGrammar.ResultKeyword,
        ParamsKeyword          = NavGrammar.ParamsKeyword,
        BaseKeyword            = NavGrammar.BaseKeyword,
        NamespaceprefixKeyword = NavGrammar.NamespaceprefixKeyword,
        UsingKeyword           = NavGrammar.UsingKeyword,
        CodeKeyword            = NavGrammar.CodeKeyword,
        GeneratetoKeyword      = NavGrammar.GeneratetoKeyword,
        NotimplementedKeyword  = NavGrammar.NotimplementedKeyword,
        AbstractmethodKeyword  = NavGrammar.AbstractmethodKeyword,
        DonotinjectKeyword     = NavGrammar.DonotinjectKeyword,
        GoToEdgeKeyword        = NavGrammar.GoToEdgeKeyword,
        ModalEdgeKeyword       = NavGrammar.ModalEdgeKeyword,
        NonModalEdgeKeyword    = NavGrammar.NonModalEdgeKeyword,
        Whitespace             = NavGrammar.Whitespace,
        SingleLineComment      = NavGrammar.SingleLineComment,
        MultiLineComment       = NavGrammar.MultiLineComment,
        NewLine                = NavGrammar.NewLine,
        Identifier             = NavGrammar.Identifier,
        OpenBrace              = NavGrammar.OpenBrace,
        CloseBrace             = NavGrammar.CloseBrace,
        OpenParen              = NavGrammar.OpenParen,
        CloseParen             = NavGrammar.CloseParen,
        OpenBracket            = NavGrammar.OpenBracket,
        CloseBracket           = NavGrammar.CloseBracket,
        LessThan               = NavGrammar.LessThan,
        GreaterThan            = NavGrammar.GreaterThan,
        Semicolon              = NavGrammar.Semicolon,
        Comma                  = NavGrammar.Comma,
        Colon                  = NavGrammar.Colon,
        StringLiteral          = NavGrammar.StringLiteral,
        Unknown                = NavGrammar.Unknown,
        EndOfFile              = 255
    }
}