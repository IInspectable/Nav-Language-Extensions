<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProductName>Nav Language Extensions</ProductName>
    <ProductVersion>5.0.15</ProductVersion>
  </PropertyGroup>
  <Import Project="..\_build\WriteThisAssemblyFile.targets" />
  <PropertyGroup>
    <VsixmanifestFile>$(MSBuildProjectDirectory)\source.extension.vsixmanifest</VsixmanifestFile>
  </PropertyGroup>
  <ItemGroup>
    <XmlConfigUpdates Include="$(VsixmanifestFile)">
      <Namespaces>"&lt;Namespace Prefix='a' Uri='http://schemas.microsoft.com/developer/vsx-schema/2011' /&gt;"</Namespaces>
      <XPath>/a:PackageManifest/a:Metadata/a:Identity/@Version</XPath>
      <NewValue>$(ProductVersion)</NewValue>
    </XmlConfigUpdates>
    <XmlConfigUpdates Include="$(VsixmanifestFile)">
      <Namespaces>"&lt;Namespace Prefix='a' Uri='http://schemas.microsoft.com/developer/vsx-schema/2011' /&gt;"</Namespaces>
      <XPath>/a:PackageManifest/a:Metadata/a:DisplayName</XPath>
      <NewValue>$(ProductName)</NewValue>
    </XmlConfigUpdates>
  </ItemGroup>
  <PropertyGroup>
    <DeployDirectory>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)\..\deploy\Vsix))</DeployDirectory>
  </PropertyGroup>
  <Target Name="DeployFiles" AfterTargets="CreateVsixContainer">
    <ItemGroup>
      <_FilesToDelete Include="$(DeployDirectory)\**\*" />
      <_itemsToDeploy Include="$(OutputPath)\**\*.vsix" />
    </ItemGroup>
    <Message Text="Copy files to directory '$([System.IO.Path]::GetFullPath('$(DeployDirectory)'))'" Importance="high" />
    <Delete Files="@(_FilesToDelete)" />
    <Copy SourceFiles="@(_itemsToDeploy)" DestinationFolder="$(DeployDirectory)" />
  </Target>
  <Target Name="UpdateProductVersion" BeforeTargets="PrepareForBuild">
    <Message Text="Updating XML $(VsixVersionNumber) files %(XmlConfigUpdates.FullPath)" Importance="high" />
    <XmlPoke Namespaces="%(XmlConfigUpdates.Namespaces)" XmlInputPath="%(XmlConfigUpdates.FullPath)" Query="%(XmlConfigUpdates.XPath)" Value="%(XmlConfigUpdates.NewValue)" />
  </Target>
  <!-- Microsoft.VisualStudio.SDK.EmbedInteropTypes sets a bunch of EmbedInteropTypes attributes, but Roslyn is somewhat special
       and has to do things differently. After the NuGet package does its thing, do further changes. -->
  <Target Name="FixVSSDKEmbeddableAssemblies" AfterTargets="LinkVSSDKEmbeddableAssemblies" BeforeTargets="FindReferenceAssembliesForReferences">
    <ItemGroup>
      <!-- The official NuGet package tries to embed EnvDTE, which is problematic because we implement the interfaces and use
           them in generic type parameters. Because of this, we can't embed them. -->
      <ReferencePath Condition="'%(FileName)' == 'EnvDTE80'                              or '%(FileName)' == 'EnvDTE90'                              or '%(FileName)' == 'EnvDTE100'">
        <EmbedInteropTypes>false</EmbedInteropTypes>
      </ReferencePath>
      <!-- The official NuGet package for Microsoft.VisualStudio.Shell.Design references this DLL in non-NoPIA way, so we can't embed it either -->
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.VisualStudio.Designer.Interfaces'">
        <EmbedInteropTypes>false</EmbedInteropTypes>
      </ReferencePath>
      <!-- We reference Microsoft.VisualStudio.CodeAnalysis.Sdk.UI, which requires us to reference these DLLs non-NoPIA way -->
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.10.0'                              or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.11.0'">
        <EmbedInteropTypes>false</EmbedInteropTypes>
      </ReferencePath>
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.VisualStudio.Imaging.Interop.14.0.DesignTime'">
        <EmbedInteropTypes>true</EmbedInteropTypes>
      </ReferencePath>
    </ItemGroup>
  </Target>
</Project>