<ResourceDictionary xmlns         = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x       = "http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:imaging = "clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
                    xmlns:utils   = "clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
                    xmlns:local   = "clr-namespace:Pharmatechnik.Nav.Language.Extension.UI"
                    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <utils:BrushToColorConverter x:Key="BrushToColorConverter" x:Uid="BrushToColorConverter_1" />

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type local:VsMenuItem}">
        
        <Border Name="Border" 
                TextBlock.Foreground = "{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarTextActiveBrushKey}}">
            <Grid>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                
                <ContentPresenter Name              = "Icon"
                                  Margin            = "5,3,4,3"
                                  VerticalAlignment = "Center"
                                  ContentSource     = "Icon"
                                  imaging:ImageThemingUtilities.ImageBackgroundColor="{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarMenuIconBackgroundColorKey}}"/>
                
                <ContentPresenter Name                = "HeaderHost"
                                  Grid.Column         = "1"
                                  ContentSource       = "Header"
                                  VerticalAlignment   = "Center"
                                  Margin              = "5,2,0,2"
                                  RecognizesAccessKey = "True"/>
                <TextBlock x:Name            = "InputGestureText"
                           Grid.Column       = "2"                   
                           Foreground        = "{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarTextInactiveBrushKey}}"
                           Text              = "{TemplateBinding InputGestureText}"
                           VerticalAlignment = "Center"
                           Margin            = "5,2,0,2"
                           DockPanel.Dock    = "Right" />
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>

                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="TextBlock.Foreground" TargetName="Border" Value="{DynamicResource {x:Static platformUi:EnvironmentColors.CommandBarTextInactiveBrushKey}}"/>
            </Trigger>
                        
        </ControlTemplate.Triggers>
        
    </ControlTemplate>
  

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type local:VsMenuItem}" TargetType="{x:Type local:VsMenuItem}">
        <!--Uns interessieren keine Untermenüs oder degleichen-->
        <Style.Setters>
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
        </Style.Setters>
    </Style>

</ResourceDictionary>